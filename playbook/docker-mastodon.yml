---
- name: Make it Mastodon  
  hosts: localhost
  vars:
    # Ansible Configs
    ansible_connection: local
    ansible_python_interpreter: "{{ansible_playbook_python}}"

    # Redis Configs
    redis_container_name: masto_redis       # Edit this if you need a different container name
    redis_container_port: 63790             # Edit this if you need a different port for redis

    # Postgres Configs
    postgres_container_name: masto_psql     # Edit this if you need a different container name
    postgres_container_user: masto_user     # Edit this if you need a different username for psql
    postgres_container_port: 54320          # Edit this if you need a different port for psql
    postgres_container_passwd: "11451419"   # Edit this if you need a different password for psql

    # Mastodon Configs
    mstdn_https_port: 4430
    mstdn_http_port: 8000
    mstdn_domain: yourinstance.social             # Put your domain here
    mstdn_tz: Asia/Taipei                         # Put your timezone here
    mstdn_smtp_port: 587                          # noreply email smtp port here
    mstdn_smtp_server: mail.yourinstance.social   # noreply email smtp addr. here
    mstdn_smtp_user: mas@yourinstance.social
    mstdn_smtp_passwd: user_password
    mstdn_secret:                                 # SECRET_KEY_BASE & OTP_SECRET
                                                  # Keys could be generated by running:
                                                  # docker run --rm -it -w /app/www --entrypoint rake lscr.io/linuxserver/mastodon secret

    mstdn_vapid_pubkey: 
    mstdn_vapid_privkey: 
    # VAPID_PRIVATE_KEY & VAPID_PUBLIC_KEY could be generated by running
    # docker run --rm -it -w /app/www --entrypoint rake lscr.io/linuxserver/mastodon mastodon:webpush:generate_vapid_key
    
  tasks:
    - name: Run Redis 
      community.docker.docker_container:
        name: "{{redis_container_name}}"
        image: redis
        detach: true
        restart_policy: always
        ports:
          - "{{redis_container_port}}:6379"

    - name: Run Postgres
      community.docker.docker_container:
        restart_policy: always
        name: "{{postgres_container_name}}"
        image: postgres
        ports:
          - "{{postgres_container_port}}:5432"
        env:
          POSTGRES_USER: "{{postgres_container_user}}"
          POSTGRES_PASSWORD: "{{postgres_container_passwd}}"
        detach: true

    - name: Compose Mastodon
      community.docker.docker_compose:
        project_name: mstdn_compose
        definition:
          version: "2.1"
          services:
            mastodon:
              image: lscr.io/linuxserver/mastodon:latest
              container_name: masto_base
              extra_hosts:
                - "host.docker.internal:host-gateway"
              environment:
                - PUID=1000
                - PGID=1000
                - TZ={{mstdn_tz}}
                - LOCAL_DOMAIN={{mstdn_domain}}
                - REDIS_HOST=host.docker.internal
                - REDIS_PORT={{redis_container_port}}
                - DB_HOST=host.docker.internal
                - DB_USER={{postgres_container_user}}
                - DB_NAME={{postgres_container_user}}
                - DB_PASS={{postgres_container_passwd}}
                - DB_PORT={{postgres_container_port}}
                - ES_ENABLED=false
                - SECRET_KEY_BASE={{mstdn_secret}}
                - OTP_SECRET={{mstdn_secret}}
                - VAPID_PRIVATE_KEY={{mstdn_vapid_privkey}}
                - VAPID_PUBLIC_KEY={{mstdn_vapid_pubkey}}
                - SMTP_SERVER={{mstdn_smtp_server}}
                - SMTP_PORT={{mstdn_smtp_port}}
                - SMTP_LOGIN={{mstdn_smtp_user}}
                - SMTP_PASSWORD={{mstdn_smtp_passwd}}
                - SMTP_FROM_ADDRESS={{mstdn_smtp_user}}
                - S3_ENABLED=false
                - WEB_DOMAIN={{mstdn_domain}}
                - ES_HOST=es #optional
                - ES_PORT=9200 #optional
                - ES_USER=elastic #optional
                - ES_PASS=elastic #optional
                - S3_BUCKET= #optional
                - AWS_ACCESS_KEY_ID= #optional
                - AWS_SECRET_ACCESS_KEY= #optional
                - S3_ALIAS_HOST= #optional
              volumes:
                - /path/to/appdata/config:/config
              ports:
                - "{{mstdn_http_port}}:80"
                - "{{mstdn_https_port}}:443"
              restart: always
